# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colab.
**Task 08: Completing missing data**
"""

#!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

from rdflib.namespace import RDF, RDFS

vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0/")
ns = Namespace("http://data.org#Person")

# Iterar sobre individuos de clase Person en g1
for person in g1.subjects(RDF.type, ns.Person):
    # Verificar si faltan propiedades
    has_given = (person, vcard.Given) in g1
    has_family = (person, vcard.Family) in g1
    has_email = (person, vcard.EMAIL) in g1

    # Buscar en g2 si faltan
    if not has_given:
        for given in g2.objects(person, vcard.Given):
            g1.add((person, vcard.Given, given))
    if not has_family:
        for family in g2.objects(person, vcard.Family):
            g1.add((person, vcard.Family, family))
    if not has_email:
        for email in g2.objects(person, foaf.email):
            g1.add((person, vcard.EMAIL, email))
