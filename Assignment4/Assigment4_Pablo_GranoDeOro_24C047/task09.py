# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_pjboLzckiZjPnuTxbxDMckojzMWbHh4

**Task 09: Data linking**
"""

#!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
OWL = Namespace("http://www.w3.org/2002/07/owl#")

personas_g1 = []
for s, p, o in g1:
    given = None
    family = None
    for s2, p2, o2 in g1:
        if s2 == s:
            if p2 == VCARD.Given:
                given = str(o2)
            elif p2 == VCARD.Family:
                family = str(o2)
    if given and family and (s, given, family) not in personas_g1:
        personas_g1.append((s, given, family))

personas_g2 = []
for s, p, o in g2:
    given = None
    family = None
    for s2, p2, o2 in g2:
        if s2 == s:
            if p2 == VCARD.Given:
                given = str(o2)
            elif p2 == VCARD.Family:
                family = str(o2)
    if given and family and (s, given, family) not in personas_g2:
        personas_g2.append((s, given, family))

for uri1, given1, family1 in personas_g1:
    for uri2, given2, family2 in personas_g2:
        if given1 == given2 and family1 == family2:
            g3.add((uri1, OWL.sameAs, uri2))

print(g3.serialize(format="ttl"))