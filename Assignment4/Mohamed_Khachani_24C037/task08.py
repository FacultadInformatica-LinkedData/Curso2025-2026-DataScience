# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/mohamed-khachani/Curso2025-2026-DataScience/blob/master/Assignment4/course_materials/notebooks/Task08.ipynb

**Task 08: Completing missing data**
"""

#!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

query='''SELECT ?p ?g ?f ?e WHERE {
    ?p a <http://data.org#Person>.
    OPTIONAL {?p <http://www.w3.org/2001/vcard-rdf/3.0#Given> ?g.}.
    OPTIONAL {?p <http://www.w3.org/2001/vcard-rdf/3.0#Family> ?f.}.
    OPTIONAL {?p <http://www.w3.org/2001/vcard-rdf/3.0#EMAIL> ?e.}.
}'''

vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
r1=g1.query(query)
r2=g2.query(query)

#print('g1 before:')
#for s, p, o in g1:
#  print(s,p,o)

for person in r1:
    print(person)
    for attr, predicate in [
        ("g", vcard.Given),
        ("f", vcard.Family),
        ("e", vcard.EMAIL),
    ]:
        if getattr(person, attr) is None:
            g1.add((
                person.p,
                predicate,
                g2.value(subject=person.p, predicate=predicate, object=None)
            ))

#print('g1 after:')
#for s, p, o in g1:
#  print(s,p,o)