# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colab.
**Task 08: Completing missing data**
"""

#!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

query='''SELECT ?p ?g ?f ?e WHERE {
    ?p a <http://data.org#Person>.
    OPTIONAL {?p vcard-rdf:Given ?g.}.
    OPTIONAL {?p vcard-rdf:Family ?f.}.
    OPTIONAL {?p vcard-rdf:EMAIL ?e.}.

}'''

r1=g1.query(query)
r2=g2.query(query)
vcard_rdf=Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

for row in r1:
  if row.g is None:
    g1.add((row.p, vcard_rdf.Given, g2.value(subject=row.p, predicate=vcard_rdf.Given, object=None)))
  if row.f is None:
    g1.add((row.p, vcard_rdf.Family, g2.value(subject=row.p, predicate=vcard_rdf.Family, object=None)))
  if row.e is None:
    g1.add((row.p, vcard_rdf.EMAIL, g2.value(subject=row.p, predicate=vcard_rdf.EMAIL, object=None)))